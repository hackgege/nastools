name: Test qBittorrent

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      qbittorrent-version:
        required: true
        type: string
      qbittorrent-host:
        required: true
        type: string
      qbittorrent-username:
        required: true
        type: string
      qbittorrent-password:
        required: true
        type: string
      is-qbt-dev:
        required: true
        type: boolean
      runner-os:
        required: false
        default: ubuntu-latest
        type: string

env:
  DOCKER_IMAGE_NAME: "ghcr.io/rmartin16/qbittorrent-nox"
  DOCKER_ARGS: "--name qbt --detach --publish 8080:8080 --volume ${{ github.workspace }}/tests/_resources:/tmp/_resources"

jobs:

  test:
    name: Test
    runs-on: "${{ inputs.runner-os }}"
    timeout-minutes: 30
    continue-on-error: true
    env:
      QBT_VER: "${{ inputs.qbittorrent-version }}"
      QBITTORRENTAPI_HOST: "${{ inputs.qbittorrent-host }}"
      QBITTORRENTAPI_USERNAME: "${{ inputs.qbittorrent-username }}"
      QBITTORRENTAPI_PASSWORD: "${{ inputs.qbittorrent-password }}"
      IS_QBT_DEV: ${{ inputs.is-qbt-dev }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3.5.2

      - name: Get packages
        uses: actions/download-artifact@v3.0.2
        with:
          name: "package"
          path: "./dist"

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "${{ inputs.python-version }}"
          cache: "pip"
          check-latest: true
          cache-dependency-path: ${{ github.workspace }}/setup.cfg

      - name: Start qBittorrent ${{ inputs.qbittorrent-version }}
        id: start-qbittorrent
        run: docker run ${{ env.DOCKER_ARGS }} ${{ env.DOCKER_IMAGE_NAME }}:${{ inputs.qbittorrent-version }}-debug

      - name: Install
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install $(ls dist/qbittorrent_api-*.whl)[dev]

      - name: Test
        if: ${{ !contains(fromJSON('["3.6", "3.5", "2.7", "pypy2.7"]'), inputs.python-version) }}
        run: tox -e py --installpkg dist/qbittorrent_api-*.whl

      - name: Test (legacy)
        if: contains(fromJSON('["3.6", "3.5", "2.7", "pypy2.7"]'), inputs.python-version)
        run: python -m coverage run -m pytest -vv

      - name: qBittorrent Log
        if: (steps.start-qbittorrent.outcome == 'success') && (success() || failure())
        run: docker logs qbt

      - name: Store coverage data
        uses: actions/upload-artifact@v3.1.2
        with:
          name: "coverage-data"
          path: "./.coverage.*"

      - name: Send mail
        if: failure() && github.event_name != 'pull_request'
        uses: dawidd6/action-send-mail@v3.7.1
        with:
          server_address: "smtp.gmail.com"
          server_port: 587
          username: "${{ secrets.EMAIL_USERNAME }}"
          password: "${{ secrets.EMAIL_PASSWORD }}"
          subject: "${{ github.job }} job of ${{ github.repository }} failed"
          body: |
            ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} failed.
            https://github.com/rmartin16/qbittorrent-api/actions/runs/${{ github.run_id }}
          to: "rmartin16+github-action@gmail.com"   # comma-separated string
          from: "rmartin16+github-action@gmail.com"
